# ---------------备注-------------------
# exp: 1. RGB encoder 使用embedder
# code:
#       更改了 yaml 修改resnet_type==resnet18-multires6
#       更改了 occant_baselines/models/occant.py 的OccAntRGB
#       更改了 occant_baselines/models/unet.py  的ResNetRGBEncoder
#       增加了 occant_utils/embedder.py 文件
# ---------------zty-------------------
EXPERIMENT_NAME: "EXPS/debug/occant_rgb_train"
USE_TIMESTAMP: True
#CONTINUE: True
# ---------------zty-------------------
# Use configs/exploration/gibson_train_w_ar.yaml for anticipation reward
BASE_TASK_CONFIG_PATH: "configs/exploration/gibson_train.yaml"
TRAINER_NAME: "occant_exp"
ENV_NAME: "ExpRLEnv"
SIMULATOR_GPU_ID: 0
#SIMULATOR_GPU_ID: 1
#SIMULATOR_GPU_IDS: [2,3,4,5,6,7]
SIMULATOR_GPU_IDS: [0]
TORCH_GPU_ID: 0
VIDEO_OPTION: ["disk", "tensorboard"]
TENSORBOARD_DIR: "tb"
VIDEO_DIR: "video_dir"
EVAL_CKPT_PATH_DIR: "data/new_checkpoints"
NUM_PROCESSES: 1
SENSORS: ["RGB_SENSOR", "DEPTH_SENSOR"]
CHECKPOINT_FOLDER: "data/new_checkpoints"
NUM_EPISODES: 10000
T_EXP: 1000

RL:
  PPO:
    # ppo params
    ppo_epoch: 4
    num_mini_batch: 1
  ANS:
    # Uncomment this for anticipation reward
    # reward_type: "map_accuracy"
    image_scale_hw: [128, 128]
    MAPPER:
      map_size: 65
      registration_type: 'moving_average'
      label_id: 'ego_map_gt_anticipated'
      ignore_pose_estimator: False
      map_batch_size: 21
      use_data_parallel: True
      replay_size: 50
      gpu_ids: [0]
    OCCUPANCY_ANTICIPATOR:
      type: 'occant_rgb'
      GP_ANTICIPATION:
        resnet_type: resnet18-multires6
      # Uncomment these options if pre-trained ans_rgb model is available
      # detach_depth_proj: True
      # pretrained_depth_proj_model: <PATH TO PRETRAINED DEPTH ckpt.pth>
      # freeze_depth_proj_model: True
